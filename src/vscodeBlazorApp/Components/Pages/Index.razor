@page "/Index"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms
@using System.Diagnostics
@using vscodeBlazorApp.Components.Models
@using Tewr.Blazor.FileReader
@using System.IO;


@inject IWebHostEnvironment Env


<PageTitle>Run Index</PageTitle>

<h3>File Indexer</h3>

<div style="text-align:center; margin-top:20px;">
    <input type="text" @bind="SelectedFolderPath" placeholder="Enter Folder to start..." style="width:80%; padding:8px;" />
    <button @onclick="SelectFolder" style="padding:8px 20px;">Search</button>
</div>

@if (!string.IsNullOrEmpty(SelectedFolderPath))
{
    <div style="margin-top: 20px;">
        <p><strong>PDF files:</strong> @PdfCount</p>
        <p><strong>DWG files:</strong> @DwgCount</p>

        <button class="btn btn-success" @onclick="StartIndexing">Start Indexing</button>
    </div>
}

@code {
    private string SelectedFolderPath = string.Empty;
    private int PdfCount = 0;
    private int DwgCount = 0;
    private ElementReference inputTypeFileElement;
    private async Task HandleFolder(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            var name = file.Name;       // file name
            var relativePath = file.Name; // folder/subfolder structure
            Debug.Print($"File: {name}, Relative Path: {relativePath}");
            SelectedFolderPath=relativePath;
        }
    }
    


    private async Task SelectFolder()
    {
        // This requires Windows Forms dialog - can't be done in browser.
        // Use a service on server or dialog in desktop context.
        //SelectedFolderPath = @"C:\install\Pdfs";
        CountFiles();
        

        await InvokeAsync(StateHasChanged); // Ensure UI updates
    }

    private void CountFiles()
    {
        if (Directory.Exists(SelectedFolderPath))
        {
            PdfCount = Directory.GetFiles(SelectedFolderPath, "*.pdf", SearchOption.AllDirectories).Length;
            DwgCount = Directory.GetFiles(SelectedFolderPath, "*.dwg", SearchOption.AllDirectories).Length;
        }
    }

    private void StartIndexing()
    {
        // Replace this with actual indexing logic
        Console.WriteLine("Starting indexing...");
        Console.WriteLine($"PDFs: {PdfCount}, DWGs: {DwgCount}");
    }

}